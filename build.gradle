/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "com.sidneysimmons.gradle-plugin-external-properties" version "2.0.0"
    id "com.palantir.git-version" version "0.12.3"
}

externalProperties {
    propertiesFileResolver project.file("secrets.properties")
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }

    maven {
        url = uri('https://repo.codemc.org/repository/maven-public')
    }

    maven {
        url = uri('https://simonsator.de/repo')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.bstats:bstats-bungeecord:1.7'
    implementation 'com.mchange:c3p0:0.9.5.5'
    implementation 'de.simonsator:UpdateChecker:1.0.3'
    compileOnly 'net.md-5:bungeecord-api:1.16-R0.2-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.16-R0.2-SNAPSHOT'
}

group = 'de.simonsator'

def details = versionDetails(prefix: 'version@')
def branch = details.branchName
def isSnapshot = (branch == null || branch == '' || branch == 'develop')

if (details.getVersion() == "unspecified") {
    version = "0.0.0"
} else {
    version = details.lastTag + (isSnapshot ? "-SNAPSHOT" : "")
}
description = 'BungeecordPartyAndFriends'
java.sourceCompatibility = JavaVersion.VERSION_1_8

jar {
    archiveBaseName.set("${rootProject.name}")
    archiveClassifier.set(isSnapshot ? "SNAPSHOT" : "")
}

publishing {

    repositories {
        maven {
            name = "YotersRepo"
            def baseUrl = 'https://repo.yoters.com/repository/maven'
            def releasesRepoUrl = "$baseUrl-releases"
            def snapshotsRepoUrl = "$baseUrl-snapshots"
            url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = props.get("myNexusUsername", project.properties.get("myNexusUsername") as String)
                password = props.get("myNexusPassword", project.properties.get("myNexusPassword") as String)
            }
        }
    }

    publications {
        create("${project.name}Maven", MavenPublication) {
            artifact jar
            afterEvaluate {
                artifactId = "${rootProject.name}"
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
